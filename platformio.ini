; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:esp32-c3-devkitm-1]
platform = espressif32
board = esp32-c3-devkitm-1
framework = arduino

; 160 MHz CPU clock compile-time
; Why 160 and not 80 Mhz? Because i want to be sure i run ADC and DSP task fast enough to be able
; to keep up with 4000 Hz smaple rate. Yes, it does eat more power, but at 50 Hz
; wifi update rate it still consumes 380 mW (measured on 2025.06.21 with 99% fisnished
; DSP processing chain), which is still great, so i will keep it like this
board_build.f_cpu = 160000000L      

; ---------- highest compiler optimisation ----------------------------------
board_build.lto = yes          ; adds the right -flto flags everywhere

; 1. wipe the default -Os that Arduino-ESP32 injects
build_unflags = -Os

; 2. add aggressive speed flags (C and C++)
build_flags =
    -O3
    -ffunction-sections -fdata-sections
    -fno-exceptions -fno-rtti
    -fstrict-aliasing
    -Wl,--gc-sections        ; garbage-collect dead sections **after** LTO
    -Wl,-u,app_main          ; keep Arduino’s entry point alive
    -specs=nano.specs        ; <<–– newlib-nano replaces full printf
    -DESP32C3
    -DARDUINO_USB_MODE=1
    -DARDUINO_USB_CDC_ON_BOOT=1

; ---------- optional tweaks -------------------------------------------------
board_build.flash_mode = dio     ; safest for C3 modules
monitor_speed          = 115200  ; or 921600 for faster logs

; -----------------------------------------------------------------
; always print RAM / Flash / IRAM usage after linking
; -----------------------------------------------------------------
extra_scripts = pre:erase_flash.py, post:size_report.py